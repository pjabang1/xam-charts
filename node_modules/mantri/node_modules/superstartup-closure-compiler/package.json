{
  "name": "superstartup-closure-compiler",
  "description": "Google Closure Compiler distributable",
  "version": "0.1.6",
  "homepage": "https://github.com/thanpolas/superstartup-closure-compiler",
  "author": {
    "name": "Thanasis Polychronakis",
    "email": "thanpolas@gmail.com",
    "url": "http://thanpol.as"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:thanpolas/superstartup-closure-compiler.git"
  },
  "bugs": {
    "url": "https://github.com/thanpolas/superstartup-closure-compiler/issues"
  },
  "main": "lib/main.js",
  "engines": {
    "node": ">=0.8.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/thanpolas/superstartup-closure-compiler/blob/master/LICENSE-MIT"
    }
  ],
  "keywords": [
    "Closure Compiler",
    "minification",
    "Performance"
  ],
  "readme": "# Superstartup Closure Compiler\n\nA package that contains a compiled `.jar` version of the [Google Closure Compiler](https://developers.google.com/closure/compiler/) and a special build that will strip out all `goog.debug` calls, and more specifically logging.\n\n> **Build Version** [SHA 579770a](https://code.google.com/p/closure-compiler/source/detail?r=579770a) Oct-25-2013\n\n## Quick Start\n\nInstall...\n```shell\nnpm install superstartup-closure-compiler --save-deps --silent\n```\n\nPretty nothing atm, just two methods:\n\n* **getPath()**\n  - Get the relative path to the closure compiler *.jar* file.\n\n* **getPathSS()**\n  - Get the relative path to the superstartup compiler *.jar* file.\n\nexample:\n```js\nvar compiler = require('superstartup-closure-compiler');\nvar exec = require('child_process').exec;\n\n/* ... */\n\n// prepare the command for the CLI\nvar command = compiler.getPath() + ' ' + compilerOptions;\n\n// run the compiler command\nexec( command, cb );\n\n```\n\n## Build One Of Your Own!\n\nYou can find the two builds in the `build/` folder:\n\n* **compiler.jar** Is vanilla Google Closure Compiler.\n* **sscompiler.jar** Is the special build that stripts out all `goog.debug` calls.\n\nYou can also make your own build of the closure compiler by following these instructions:\n\n1. Fetch the submodule (actual closure compiler sources):\n```shell\ngit submodule init\ngit submodule update\n```\n\n2. Optionally, you may want to update the compiler sources to the latest version:\n```shell\ncd google-closure-compiler\ngit pull\n```\n\n3. Build closure compiler with [ant](http://ant.apache.org/). At the root of closure's compiler source tree, there is an Ant file named `build.xml`. To use it, navigate to the same directory and type the command:\n```shell\nant jar\n```\n\n    This will produce a jar file called \"build/compiler.jar\".\n\n4. Now time to build the custom compiler, move to the `superstartup-compiler` directory and issue the same build command:\n```shell\ncd superstartup-compiler\nant jar\n```\n\n    After the build is successful, you can find the jar file in the `build` folder.\n\nIf you are having problems with `ant jar` or the build produces errors, try a `ant clean` first.\n\n",
  "readmeFilename": "README.md",
  "_id": "superstartup-closure-compiler@0.1.6",
  "_from": "superstartup-closure-compiler@0.1.6"
}
